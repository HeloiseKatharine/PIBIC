/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import dao.PacienteDAO;
import dto.Exame;
import dto.Paciente;
import java.awt.Desktop;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Heloise
 */
public class TelaPaciente extends javax.swing.JFrame {

    /**
     * Creates new form TelaPesquisar
     */
    public TelaPaciente() {
        initComponents();
        PainelCadastro.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblGravidadeDaFormalidade = new javax.swing.JLabel();
        rbtnGravB = new javax.swing.JRadioButton();
        rbtnGravM = new javax.swing.JRadioButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        btnPesquisar = new javax.swing.JButton();
        txtNome = new javax.swing.JTextField();
        txtCPF = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        lblNome = new javax.swing.JLabel();
        lblCPF = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnExcluir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaExame = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        btnEditar = new javax.swing.JButton();
        btnAdicionarExame = new javax.swing.JButton();
        PainelCadastro = new javax.swing.JPanel();
        btnAdicionarImagem = new javax.swing.JButton();
        txtNomeCaminho = new javax.swing.JTextField();
        lblImagem = new javax.swing.JLabel();
        rbtnCarF = new javax.swing.JRadioButton();
        rbtnCarG = new javax.swing.JRadioButton();
        rbtnCarD = new javax.swing.JRadioButton();
        lblCaracteristicaDoTecido = new javax.swing.JLabel();
        rbtnClassSpic = new javax.swing.JRadioButton();
        rbtnClassMisc = new javax.swing.JRadioButton();
        rbtnClassArch = new javax.swing.JRadioButton();
        rbtnClassAsym = new javax.swing.JRadioButton();
        rbtnClassNorm = new javax.swing.JRadioButton();
        rbtnClassCalc = new javax.swing.JRadioButton();
        rbtnClassCirc = new javax.swing.JRadioButton();
        lblClasseDaNormalidade = new javax.swing.JLabel();
        rbtnGravB1 = new javax.swing.JRadioButton();
        rbtnGravM1 = new javax.swing.JRadioButton();
        lblGravidadeDaFormalidade1 = new javax.swing.JLabel();
        lblX = new javax.swing.JLabel();
        lblY = new javax.swing.JLabel();
        lblRaio = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtX = new javax.swing.JTextField();
        txtY = new javax.swing.JTextField();
        txtRaio = new javax.swing.JTextField();
        btnCadastrar = new javax.swing.JButton();
        btnExcluirPaciente = new javax.swing.JButton();

        lblGravidadeDaFormalidade.setText("Gravidade da formalidade:");

        rbtnGravB.setText("B - Benign");

        rbtnGravM.setText(" M - Malignant");

        jButton2.setText("jButton2");

        jButton3.setText("jButton3");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setExtendedState(6);

        btnPesquisar.setText("Abrir Exame");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        txtNome.setForeground(new java.awt.Color(0, 0, 0));
        txtNome.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        txtNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeActionPerformed(evt);
            }
        });

        txtCPF.setDisabledTextColor(new java.awt.Color(51, 51, 51));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Tela Paciente");

        lblNome.setText("Nome do paciente:");

        lblCPF.setText("CPF:");

        jLabel5.setText("Informações do  paciente:");

        btnExcluir.setText("Excluir Exame");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        tabelaExame.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Imagem", "Carac. do tecido", "Classe", "Gravidade", "X", "Y", "Raio"
            }
        ));
        jScrollPane1.setViewportView(tabelaExame);

        jLabel2.setText("Exames do paciente:");

        btnEditar.setText("Editar informações");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnAdicionarExame.setText("Adicionar Exame");
        btnAdicionarExame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarExameActionPerformed(evt);
            }
        });

        btnAdicionarImagem.setText("Add");
        btnAdicionarImagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarImagemActionPerformed(evt);
            }
        });

        txtNomeCaminho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeCaminhoActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbtnCarF);
        rbtnCarF.setText("F - Fatty");

        buttonGroup1.add(rbtnCarG);
        rbtnCarG.setText("G - Fatty-glandular");

        buttonGroup1.add(rbtnCarD);
        rbtnCarD.setText("D - Dense-glandular");
        rbtnCarD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnCarDActionPerformed(evt);
            }
        });

        lblCaracteristicaDoTecido.setText("Caracteristica do tecido: ");

        buttonGroup2.add(rbtnClassSpic);
        rbtnClassSpic.setText("SPIC");
        rbtnClassSpic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnClassSpicActionPerformed(evt);
            }
        });

        buttonGroup2.add(rbtnClassMisc);
        rbtnClassMisc.setText("MISC");

        buttonGroup2.add(rbtnClassArch);
        rbtnClassArch.setText("ARCH");

        buttonGroup2.add(rbtnClassAsym);
        rbtnClassAsym.setText("ASYM");
        rbtnClassAsym.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnClassAsymActionPerformed(evt);
            }
        });

        buttonGroup2.add(rbtnClassNorm);
        rbtnClassNorm.setText("NORM");

        buttonGroup2.add(rbtnClassCalc);
        rbtnClassCalc.setText("CALC ");

        buttonGroup2.add(rbtnClassCirc);
        rbtnClassCirc.setText("CIRC");

        lblClasseDaNormalidade.setText("Classe da normalidade:");

        buttonGroup3.add(rbtnGravB1);
        rbtnGravB1.setText("B - Benign");

        buttonGroup3.add(rbtnGravM1);
        rbtnGravM1.setText(" M - Malignant");

        lblGravidadeDaFormalidade1.setText("Gravidade da formalidade:");

        lblX.setText("X:");

        lblY.setText("Y:");

        lblRaio.setText("Raio:");

        jLabel3.setText("Coodenadas");

        btnCadastrar.setText("Cadastrar");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PainelCadastroLayout = new javax.swing.GroupLayout(PainelCadastro);
        PainelCadastro.setLayout(PainelCadastroLayout);
        PainelCadastroLayout.setHorizontalGroup(
            PainelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelCadastroLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PainelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lblImagem, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PainelCadastroLayout.createSequentialGroup()
                        .addComponent(btnAdicionarImagem)
                        .addGap(18, 18, 18)
                        .addComponent(txtNomeCaminho, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(320, Short.MAX_VALUE))
            .addGroup(PainelCadastroLayout.createSequentialGroup()
                .addGap(287, 287, 287)
                .addComponent(btnCadastrar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(PainelCadastroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCaracteristicaDoTecido)
                    .addComponent(rbtnCarG)
                    .addComponent(rbtnCarF)
                    .addComponent(rbtnCarD))
                .addGap(18, 18, 18)
                .addGroup(PainelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbtnClassNorm)
                    .addComponent(rbtnClassArch)
                    .addComponent(rbtnClassAsym)
                    .addGroup(PainelCadastroLayout.createSequentialGroup()
                        .addGroup(PainelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblClasseDaNormalidade)
                            .addComponent(rbtnClassCalc)
                            .addComponent(rbtnClassMisc)
                            .addComponent(rbtnClassSpic)
                            .addComponent(rbtnClassCirc))
                        .addGap(18, 18, 18)
                        .addGroup(PainelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbtnGravM1)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblGravidadeDaFormalidade1)
                                .addComponent(rbtnGravB1)))
                        .addGap(18, 18, 18)
                        .addGroup(PainelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(PainelCadastroLayout.createSequentialGroup()
                                .addGroup(PainelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblX)
                                    .addComponent(lblY)
                                    .addComponent(lblRaio))
                                .addGap(18, 18, 18)
                                .addGroup(PainelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtY, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtRaio, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtX, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        PainelCadastroLayout.setVerticalGroup(
            PainelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelCadastroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdicionarImagem)
                    .addComponent(txtNomeCaminho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblImagem, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PainelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PainelCadastroLayout.createSequentialGroup()
                        .addComponent(lblCaracteristicaDoTecido)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbtnCarF)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbtnCarG)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbtnCarD))
                    .addGroup(PainelCadastroLayout.createSequentialGroup()
                        .addGroup(PainelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PainelCadastroLayout.createSequentialGroup()
                                .addGroup(PainelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(PainelCadastroLayout.createSequentialGroup()
                                        .addComponent(lblClasseDaNormalidade)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(rbtnClassCalc)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(rbtnClassCirc))
                                    .addGroup(PainelCadastroLayout.createSequentialGroup()
                                        .addComponent(lblGravidadeDaFormalidade1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(rbtnGravB1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(rbtnGravM1)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbtnClassSpic)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbtnClassMisc))
                            .addGroup(PainelCadastroLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGroup(PainelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(PainelCadastroLayout.createSequentialGroup()
                                        .addGap(62, 62, 62)
                                        .addComponent(txtRaio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(PainelCadastroLayout.createSequentialGroup()
                                        .addGroup(PainelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblX)
                                            .addComponent(txtX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(PainelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblY)
                                            .addComponent(txtY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblRaio)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbtnClassArch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbtnClassAsym)
                        .addGap(10, 10, 10)
                        .addComponent(rbtnClassNorm)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCadastrar)
                .addContainerGap())
        );

        btnExcluirPaciente.setText("Excluir Paciente");
        btnExcluirPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirPacienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(13, 13, 13))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExcluirPaciente))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNome)
                            .addComponent(lblCPF))
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNome)
                            .addComponent(txtCPF)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnPesquisar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdicionarExame)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PainelCadastro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(12, 12, 12))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNome)
                            .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCPF)
                            .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnEditar)
                            .addComponent(btnExcluirPaciente))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAdicionarExame)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnPesquisar)
                                .addComponent(btnExcluir))))
                    .addComponent(PainelCadastro, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(38, 38, 38))
        );

        setSize(new java.awt.Dimension(1309, 665));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        // TODO add your handling code here:
        CarregarExame();
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void txtNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        // TODO add your handling code here:
        ExcluirExame();
        AtualizaTabela();
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        EditarPaciente();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void rbtnClassAsymActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnClassAsymActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtnClassAsymActionPerformed

    private void rbtnClassSpicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnClassSpicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtnClassSpicActionPerformed

    private void rbtnCarDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnCarDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtnCarDActionPerformed

    private void txtNomeCaminhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeCaminhoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeCaminhoActionPerformed

    private void btnAdicionarImagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarImagemActionPerformed
        // TODO add your handling code here:
        AdicionaImagem();
    }//GEN-LAST:event_btnAdicionarImagemActionPerformed

    private void btnExcluirPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirPacienteActionPerformed
        // TODO add your handling code here:
        ExcluirPaciente();
        dispose();
    }//GEN-LAST:event_btnExcluirPacienteActionPerformed

    private void btnAdicionarExameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarExameActionPerformed
        // TODO add your handling code here:
        PainelCadastro.setVisible(true);
    }//GEN-LAST:event_btnAdicionarExameActionPerformed

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        // TODO add your handling code here:
        Cadastrar();
        PainelCadastro.setVisible(false);
        AtualizaTabela();
    }//GEN-LAST:event_btnCadastrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPaciente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PainelCadastro;
    private javax.swing.JButton btnAdicionarExame;
    private javax.swing.JButton btnAdicionarImagem;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnExcluirPaciente;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCPF;
    private javax.swing.JLabel lblCaracteristicaDoTecido;
    private javax.swing.JLabel lblClasseDaNormalidade;
    private javax.swing.JLabel lblGravidadeDaFormalidade;
    private javax.swing.JLabel lblGravidadeDaFormalidade1;
    private javax.swing.JLabel lblImagem;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblRaio;
    private javax.swing.JLabel lblX;
    private javax.swing.JLabel lblY;
    private javax.swing.JRadioButton rbtnCarD;
    private javax.swing.JRadioButton rbtnCarF;
    private javax.swing.JRadioButton rbtnCarG;
    private javax.swing.JRadioButton rbtnClassArch;
    private javax.swing.JRadioButton rbtnClassAsym;
    private javax.swing.JRadioButton rbtnClassCalc;
    private javax.swing.JRadioButton rbtnClassCirc;
    private javax.swing.JRadioButton rbtnClassMisc;
    private javax.swing.JRadioButton rbtnClassNorm;
    private javax.swing.JRadioButton rbtnClassSpic;
    private javax.swing.JRadioButton rbtnGravB;
    private javax.swing.JRadioButton rbtnGravB1;
    private javax.swing.JRadioButton rbtnGravM;
    private javax.swing.JRadioButton rbtnGravM1;
    private javax.swing.JTable tabelaExame;
    private javax.swing.JTextField txtCPF;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtNomeCaminho;
    private javax.swing.JTextField txtRaio;
    private javax.swing.JTextField txtX;
    private javax.swing.JTextField txtY;
    // End of variables declaration//GEN-END:variables

    public Integer id;

    public void mostrarValores(String nome, String cpf, String carcTecido, String classNorm, String gravForm, Integer x, Integer y, Integer raio, ArrayList<Exame> lista, Integer id_paciente) {
        txtNome.setText(nome);
        txtCPF.setText(cpf);
        id = id_paciente;

        /*txtCarcTecido.setText(carcTecido);
        txtClassNorm.setText(classNorm);
        txtGravForm.setText(gravForm);
        txtX.setText(Integer.toString(x));
        txtY.setText(Integer.toString(y));
        txtRaio.setText(Integer.toString(raio));*/
        PacienteDAO pacienteDAO = new PacienteDAO();

        DefaultTableModel model = (DefaultTableModel) tabelaExame.getModel();
        model.setNumRows(0);

        for (int i = 0; i < lista.size(); i++) {
            model.addRow(new Object[]{
                lista.get(i).getNomeimagem(),
                lista.get(i).getCaracteristicatecido(),
                lista.get(i).getClasseanormalidade(),
                lista.get(i).getGravidadeanormalidade(),
                lista.get(i).getRaio(),
                lista.get(i).getX(),
                lista.get(i).getY()
            });
        }
    }

    private void CarregarExame() {
        try {

            String nome;

            int setar = tabelaExame.getSelectedRow();

            nome = tabelaExame.getModel().getValueAt(setar, 0).toString();

            try {
                if (Desktop.isDesktopSupported()) {
                    Desktop.getDesktop().open(new File("..\\imagens\\" + nome));
                }
            } catch (IOException e) {
                JOptionPane.showMessageDialog(null, "TelaPaciente " + e);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "TelaPaciente " + e);
        }
    }

    private void EditarPaciente() {

        String nome;
        String cpf;

        nome = txtNome.getText().toUpperCase();
        cpf = txtCPF.getText();

        Paciente pacienteDTO = new Paciente();

        pacienteDTO.setNome(nome);
        pacienteDTO.setCpf(cpf);
        pacienteDTO.setId_paciente(id);

        PacienteDAO pacienteDAO = new PacienteDAO();
        pacienteDAO.EditarPaciente(pacienteDTO);
    }

    private void ExcluirPaciente() {

        Paciente pacienteDTO = new Paciente();
        Exame exameDTO = new Exame();

        pacienteDTO.setId_paciente(id);

        PacienteDAO pacienteDAO = new PacienteDAO();
        pacienteDAO.ExcluirPaciente(pacienteDTO, exameDTO);
    }

    private void ExcluirExame() {

        try {
            String nome;

            int setar = tabelaExame.getSelectedRow();

            nome = tabelaExame.getModel().getValueAt(setar, 0).toString();

            Exame exameDTO = new Exame();

            exameDTO.setPaciente_idpaciente(id);
            exameDTO.setNomeimagem(nome);

            PacienteDAO pacienteDAO = new PacienteDAO();
            pacienteDAO.ExcluirExame(exameDTO);
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "TelaPaciente " + e);
        }

    }

    private void AtualizaTabela() {

        PacienteDAO pacienteDAO = new PacienteDAO();
        Paciente pacienteDTO = new Paciente();
        Exame exameDTO = new Exame();

        pacienteDTO.setId_paciente(id);

        ArrayList<Exame> lista = pacienteDAO.listarExames(pacienteDTO);


        DefaultTableModel model = (DefaultTableModel) tabelaExame.getModel();
        model.setNumRows(0);

        for (int i = 0; i < lista.size(); i++) {
            model.addRow(new Object[]{
                lista.get(i).getNomeimagem(),
                lista.get(i).getCaracteristicatecido(),
                lista.get(i).getClasseanormalidade(),
                lista.get(i).getGravidadeanormalidade(),
                lista.get(i).getRaio(),
                lista.get(i).getX(),
                lista.get(i).getY()
            /* exameDTO.getNomeimagem(),
                exameDTO.getCaracteristicatecido(),
                exameDTO.getClasseanormalidade(),
                exameDTO.getGravidadeanormalidade(),
                exameDTO.getRaio(),
                exameDTO.getX(),
                exameDTO.getY()*/
            });
        }
    }

    String fileName;
    BufferedImage imagem;

    private void AdicionaImagem() {

        JFileChooser arquivo = new JFileChooser();
        arquivo.setDialogTitle("Selecione uma imagem");
        arquivo.setFileSelectionMode(JFileChooser.FILES_ONLY);

        int opc = arquivo.showOpenDialog(this);

        if (opc == JFileChooser.APPROVE_OPTION) {

            File file = new File("Caminho");

            file = arquivo.getSelectedFile();

            try {

                imagem = ImageIO.read(file);

                fileName = file.getAbsolutePath();

                txtNomeCaminho.setText(fileName);

                ImageIcon imagem = new ImageIcon(arquivo.getSelectedFile().getPath());

                //Para mostrar a imagem
                lblImagem.setIcon(new ImageIcon(imagem.getImage().getScaledInstance(lblImagem.getWidth(), lblImagem.getHeight(), Image.SCALE_DEFAULT)));

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "TelaCadastro | ADD " + e);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Voce nao selecionou nenhum arquivo.");
        }
    }

    private void Cadastrar() {
        try {
            String cpf, caracteristicatecido, classeanormalidade, gravidadeanormalidade, stringX, stringY, stringRaio;
            Integer x, y, raio;

            cpf = txtCPF.getText();

            Paciente paciente = new Paciente();
            Exame exame = new Exame();

            paciente.setId_paciente(id);
            paciente.setCpf(cpf);

            boolean img;
            //pegando os dados do exame 
            if (txtNomeCaminho.getText().isEmpty()) {

                img = false;

            } else {

                img = true;

                //pegando os dados do exame 
                if (rbtnCarF.isSelected()) {
                    caracteristicatecido = "F";
                } else if (rbtnCarG.isSelected()) {
                    caracteristicatecido = "G";
                } else {
                    caracteristicatecido = "D";
                }

                if (rbtnClassCalc.isSelected()) {
                    classeanormalidade = "CALC";
                } else if (rbtnClassCirc.isSelected()) {
                    classeanormalidade = "CIRC";
                } else if (rbtnClassSpic.isSelected()) {
                    classeanormalidade = "SPIC";
                } else if (rbtnClassMisc.isSelected()) {
                    classeanormalidade = "MISC";
                } else if (rbtnClassArch.isSelected()) {
                    classeanormalidade = "ARCH";
                } else if (rbtnClassAsym.isSelected()) {
                    classeanormalidade = "ASYM";
                } else {
                    classeanormalidade = "NORM";
                }

                if (rbtnGravB.isSelected()) {
                    gravidadeanormalidade = "B";
                } else if (rbtnGravM.isSelected()) {
                    gravidadeanormalidade = "M";
                } else {
                    gravidadeanormalidade = "";
                }

                stringX = txtX.getText();
                stringY = txtY.getText();
                stringRaio = txtRaio.getText();

                if (stringX.isEmpty()) {
                    x = null;
                } else {
                    x = Integer.parseInt(stringX);
                }

                if (stringY.isEmpty()) {
                    y = null;
                } else {
                    y = Integer.parseInt(stringY);
                }

                if (stringRaio.isEmpty()) {
                    raio = null;
                } else {
                    raio = Integer.parseInt(stringRaio);
                }

                //pegando somente o nome da imagem
                int tam = fileName.lastIndexOf("\\");
                fileName = fileName.substring(tam + 1);

                //salvando na pasta imagens
                ImageIO.write(imagem, "jpg", new File("..\\imagens\\" + fileName));

                //salvando nome no banco de dados
                exame.setCaracteristicatecido(caracteristicatecido);
                exame.setClasseanormalidade(classeanormalidade);
                exame.setGravidadeanormalidade(gravidadeanormalidade);
                exame.setX(x);
                exame.setY(y);
                exame.setRaio(raio);
                exame.setNomeimagem(fileName);
            }

            //importando tudo para o PacienteDAO
            PacienteDAO pacientedao = new PacienteDAO();
            pacientedao.cadastrarExame(paciente, exame, img);

            JOptionPane.showMessageDialog(rootPane, "Cadastro realizado com sucesso.");

        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "TelaCadastro | cadastrar " + e);
        }
    }
}
